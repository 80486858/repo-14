/*
 * Copyright 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */
/*
 *
 *
 *
 *
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.adobe.aio.event.management.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Adobe I/O Events EventMetadata Collection model
 */
public class EventMetadataCollection {

  @JsonProperty("_embedded")
  private EventMetadataList eventMetadataList;

  public EventMetadataList getEventMetadataList() {
    return eventMetadataList;
  }

  @JsonIgnore
  public List<EventMetadata> getEventMetadata() {
    if (!this.isEmpty()) {
      return eventMetadataList.getEventmetadata();
    } else {
      return new ArrayList<>();
    }
  }

  @JsonIgnore
  public boolean isEmpty() {
    return (eventMetadataList == null || eventMetadataList.getEventmetadata().isEmpty());
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventMetadataCollection that = (EventMetadataCollection) o;
    return Objects.equals(eventMetadataList, that.eventMetadataList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventMetadataList);
  }

  @Override
  public String toString() {
    return "EventMetadataCollection{" + eventMetadataList + '}';
  }


  public static class EventMetadataList {

    @JsonProperty("eventmetadata")
    private List<EventMetadata> eventmetadata;

    public List<EventMetadata> getEventmetadata() {
      return eventmetadata;
    }

    @JsonIgnore
    public boolean isEmpty() {
      return (eventmetadata == null || eventmetadata.isEmpty());
    }

    @Override
    public boolean equals(Object o) {
      if (this == o) {
        return true;
      }
      if (o == null || getClass() != o.getClass()) {
        return false;
      }
      EventMetadataList that = (EventMetadataList) o;
      return Objects.equals(eventmetadata, that.eventmetadata);
    }

    @Override
    public int hashCode() {
      return Objects.hash(eventmetadata);
    }

    @Override
    public String toString() {
      return "{" + eventmetadata + '}';
    }
  }
}
